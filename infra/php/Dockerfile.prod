FROM php:8.1-fpm-buster

# Composer設定
ENV COMPOSER_ALLOW_SUPERUSER=1 \
    COMPOSER_HOME=/composer

# Composerのインストール
COPY --from=composer:2.2 /usr/bin/composer /usr/bin/composer

# 必要なパッケージをインストール
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    nginx \
    git \
    unzip \
    libzip-dev \
    libicu-dev \
    libonig-dev \
    curl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    docker-php-ext-install intl pdo_mysql zip bcmath

# ビルド引数を利用してAWS_REGIONを設定
ARG AWS_REGION
ENV AWS_REGION=${AWS_REGION}

# SSM エージェントのインストール
RUN curl "https://s3.${AWS_REGION}.amazonaws.com/amazon-ssm-${AWS_REGION}/latest/debian_amd64/amazon-ssm-agent.deb" -o "amazon-ssm-agent.deb" && \
    dpkg -i amazon-ssm-agent.deb && \
    rm amazon-ssm-agent.deb

# PHP設定の追加
RUN echo "max_execution_time = 30" >> /usr/local/etc/php/conf.d/docker-php-ext-custom.ini && \
    echo "memory_limit = 128M" >> /usr/local/etc/php/conf.d/docker-php-ext-custom.ini && \
    echo "max_input_time = 60" >> /usr/local/etc/php/conf.d/docker-php-ext-custom.ini && \
    echo "post_max_size = 20M" >> /usr/local/etc/php/conf.d/docker-php-ext-custom.ini && \
    echo "upload_max_filesize = 20M" >> /usr/local/etc/php/conf.d/docker-php-ext-custom.ini

# PHP設定ファイルをコピー
COPY ./infra/php/php.prod.ini /usr/local/etc/php/php.ini

# Nginx設定ファイルをコピー
COPY ./infra/nginx/nginx.prod.conf /etc/nginx/nginx.conf
COPY ./infra/nginx/default.prod.conf /etc/nginx/conf.d/default.conf

# エントリポイントスクリプトをコピー
COPY ./infra/php/docker-entrypoint.prod.sh /usr/local/bin/docker-entrypoint.sh
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# 作業ディレクトリを指定
WORKDIR /var/www

# アプリケーションのコードをコピー
COPY ./src /var/www

# Composerの依存関係をインストール
RUN composer install --optimize-autoloader --no-dev

# ストレージディレクトリの準備
RUN mkdir -p /var/www/storage/framework/{sessions,views,cache} && \
    mkdir -p /var/www/storage/logs

# 権限設定
RUN chown -R www-data:www-data /var/www && \
    chmod -R 775 /var/www/storage && \
    chmod -R 775 /var/www/bootstrap/cache

# ポートの公開
EXPOSE 80
EXPOSE 6001

# ヘルスチェック用のツール追加
RUN apt-get update && \
    apt-get install -y --no-install-recommends procps && \
    rm -rf /var/lib/apt/lists/*

# エントリポイントスクリプトを実行
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]

# サービスの起動
CMD ["sh", "-c", "php-fpm -D && amazon-ssm-agent && nginx -g 'daemon off;'"]
